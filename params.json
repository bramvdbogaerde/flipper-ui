{"name":"Flipper-ui","tagline":"UI for the Flipper gem","body":"# Flipper::UI\r\n\r\nUI for the [Flipper](https://github.com/jnunemaker/flipper) gem. __Note__: This is not fully functional yet. The end product will look like this:\r\n\r\n![flipper web](http://dribbble.s3.amazonaws.com/users/59/screenshots/704704/attachments/65188/flipper.png)\r\n\r\n## Installation\r\n\r\nAdd this line to your application's Gemfile:\r\n\r\n    gem 'flipper-ui'\r\n\r\nAnd then execute:\r\n\r\n    $ bundle\r\n\r\nOr install it yourself as:\r\n\r\n    $ gem install flipper-ui\r\n\r\n## Usage\r\n\r\n### Rails\r\n\r\nGiven that you've already initialized `Flipper` as per the [flipper](https://github.com/jnunemaker/flipper) readme:\r\n\r\n```ruby\r\n# config/initializers/flipper.rb\r\n$flipper = Flipper.new(...)\r\n```\r\n\r\nyou can mount `Flipper::UI` to a route of your choice:\r\n```ruby\r\n# config/routes.rb\r\n\r\nYourRailsApp::Application.routes.draw do\r\n  mount Flipper::UI.app($flipper) => '/flipper'\r\nend\r\n```\r\n\r\n#### Security\r\n\r\nYou almost certainly want to limit access when using Flipper::UI in production. Using [routes constraints](http://guides.rubyonrails.org/routing.html#request-based-constraints) is one way to achieve this:\r\n\r\n```ruby\r\n# config/routes.rb\r\n\r\nflipper_constraint = lambda { |request| request.remote_ip == '127.0.0.1' }\r\nconstraints flipper_constraint do\r\n  mount Flipper::UI.app($flipper) => '/flipper'\r\nend\r\n```\r\n\r\n\r\n### Standalone\r\n\r\nMinimal example for Rack:\r\n\r\n```ruby\r\n# config.ru\r\n\r\nrequire 'flipper-ui'\r\nrequire 'flipper/adapters/memory'\r\n\r\nadapter = Flipper::Adapters::Memory.new\r\nflipper = Flipper.new(adapter)\r\n\r\nrun Flipper::UI.app(flipper)\r\n```\r\n\r\nSee [examples/basic.ru](https://github.com/jnunemaker/flipper-ui/blob/master/examples/basic.ru) for a more full example\r\n\r\n## Contributing\r\n\r\n1. Fork it\r\n2. Create your feature branch (`git checkout -b my-new-feature`)\r\n3. **Fire up the app** (`bundle exec rake start`)\r\n4. **Start up guard** (`bundle exec guard` for automatic coffeescript/sass compilation and such).\r\n5. Commit your changes (`git commit -am 'Added some feature'`)\r\n6. Push to the branch (`git push origin my-new-feature`)\r\n7. Create new Pull Request\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}